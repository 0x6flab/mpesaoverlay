// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.2
// source: overlay/requests.proto

package overlay

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandID          string `protobuf:"bytes,1,opt,name=commandID,proto3" json:"commandID,omitempty"`
	PartyA             uint64 `protobuf:"varint,2,opt,name=partyA,proto3" json:"partyA,omitempty"`
	IdentifierType     uint32 `protobuf:"varint,3,opt,name=identifierType,proto3" json:"identifierType,omitempty"`
	Remarks            string `protobuf:"bytes,4,opt,name=remarks,proto3" json:"remarks,omitempty"`
	InitiatorName      string `protobuf:"bytes,5,opt,name=initiatorName,proto3" json:"initiatorName,omitempty"`
	InitiatorPassword  string `protobuf:"bytes,6,opt,name=initiatorPassword,proto3" json:"initiatorPassword,omitempty"`
	SecurityCredential string `protobuf:"bytes,7,opt,name=securityCredential,proto3" json:"securityCredential,omitempty"`
	QueueTimeOutURL    string `protobuf:"bytes,8,opt,name=queueTimeOutURL,proto3" json:"queueTimeOutURL,omitempty"`
	ResultURL          string `protobuf:"bytes,9,opt,name=resultURL,proto3" json:"resultURL,omitempty"`
}

func (x *AccBalanceReq) Reset() {
	*x = AccBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_overlay_requests_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccBalanceReq) ProtoMessage() {}

func (x *AccBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_overlay_requests_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccBalanceReq.ProtoReflect.Descriptor instead.
func (*AccBalanceReq) Descriptor() ([]byte, []int) {
	return file_overlay_requests_proto_rawDescGZIP(), []int{0}
}

func (x *AccBalanceReq) GetCommandID() string {
	if x != nil {
		return x.CommandID
	}
	return ""
}

func (x *AccBalanceReq) GetPartyA() uint64 {
	if x != nil {
		return x.PartyA
	}
	return 0
}

func (x *AccBalanceReq) GetIdentifierType() uint32 {
	if x != nil {
		return x.IdentifierType
	}
	return 0
}

func (x *AccBalanceReq) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *AccBalanceReq) GetInitiatorName() string {
	if x != nil {
		return x.InitiatorName
	}
	return ""
}

func (x *AccBalanceReq) GetInitiatorPassword() string {
	if x != nil {
		return x.InitiatorPassword
	}
	return ""
}

func (x *AccBalanceReq) GetSecurityCredential() string {
	if x != nil {
		return x.SecurityCredential
	}
	return ""
}

func (x *AccBalanceReq) GetQueueTimeOutURL() string {
	if x != nil {
		return x.QueueTimeOutURL
	}
	return ""
}

func (x *AccBalanceReq) GetResultURL() string {
	if x != nil {
		return x.ResultURL
	}
	return ""
}

type B2Creq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginatorConversationID string `protobuf:"bytes,1,opt,name=originatorConversationID,proto3" json:"originatorConversationID,omitempty"`
	CommandID                string `protobuf:"bytes,2,opt,name=commandID,proto3" json:"commandID,omitempty"`
	PartyA                   uint64 `protobuf:"varint,3,opt,name=partyA,proto3" json:"partyA,omitempty"`
	PartyB                   uint64 `protobuf:"varint,4,opt,name=partyB,proto3" json:"partyB,omitempty"`
	Remarks                  string `protobuf:"bytes,5,opt,name=remarks,proto3" json:"remarks,omitempty"`
	InitiatorName            string `protobuf:"bytes,6,opt,name=initiatorName,proto3" json:"initiatorName,omitempty"`
	InitiatorPassword        string `protobuf:"bytes,7,opt,name=initiatorPassword,proto3" json:"initiatorPassword,omitempty"`
	SecurityCredential       string `protobuf:"bytes,8,opt,name=securityCredential,proto3" json:"securityCredential,omitempty"`
	QueueTimeOutURL          string `protobuf:"bytes,9,opt,name=queueTimeOutURL,proto3" json:"queueTimeOutURL,omitempty"`
	ResultURL                string `protobuf:"bytes,10,opt,name=resultURL,proto3" json:"resultURL,omitempty"`
	TransactionID            string `protobuf:"bytes,11,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	Occasion                 string `protobuf:"bytes,12,opt,name=occasion,proto3" json:"occasion,omitempty"`
	Amount                   uint64 `protobuf:"varint,13,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *B2Creq) Reset() {
	*x = B2Creq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_overlay_requests_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *B2Creq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*B2Creq) ProtoMessage() {}

func (x *B2Creq) ProtoReflect() protoreflect.Message {
	mi := &file_overlay_requests_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use B2Creq.ProtoReflect.Descriptor instead.
func (*B2Creq) Descriptor() ([]byte, []int) {
	return file_overlay_requests_proto_rawDescGZIP(), []int{1}
}

func (x *B2Creq) GetOriginatorConversationID() string {
	if x != nil {
		return x.OriginatorConversationID
	}
	return ""
}

func (x *B2Creq) GetCommandID() string {
	if x != nil {
		return x.CommandID
	}
	return ""
}

func (x *B2Creq) GetPartyA() uint64 {
	if x != nil {
		return x.PartyA
	}
	return 0
}

func (x *B2Creq) GetPartyB() uint64 {
	if x != nil {
		return x.PartyB
	}
	return 0
}

func (x *B2Creq) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *B2Creq) GetInitiatorName() string {
	if x != nil {
		return x.InitiatorName
	}
	return ""
}

func (x *B2Creq) GetInitiatorPassword() string {
	if x != nil {
		return x.InitiatorPassword
	}
	return ""
}

func (x *B2Creq) GetSecurityCredential() string {
	if x != nil {
		return x.SecurityCredential
	}
	return ""
}

func (x *B2Creq) GetQueueTimeOutURL() string {
	if x != nil {
		return x.QueueTimeOutURL
	}
	return ""
}

func (x *B2Creq) GetResultURL() string {
	if x != nil {
		return x.ResultURL
	}
	return ""
}

func (x *B2Creq) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *B2Creq) GetOccasion() string {
	if x != nil {
		return x.Occasion
	}
	return ""
}

func (x *B2Creq) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type C2BRegisterURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidationURL   string `protobuf:"bytes,1,opt,name=validationURL,proto3" json:"validationURL,omitempty"`
	ConfirmationURL string `protobuf:"bytes,2,opt,name=confirmationURL,proto3" json:"confirmationURL,omitempty"`
	ShortCode       uint64 `protobuf:"varint,3,opt,name=shortCode,proto3" json:"shortCode,omitempty"`
	ResponseType    string `protobuf:"bytes,4,opt,name=responseType,proto3" json:"responseType,omitempty"`
}

func (x *C2BRegisterURLReq) Reset() {
	*x = C2BRegisterURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_overlay_requests_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2BRegisterURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2BRegisterURLReq) ProtoMessage() {}

func (x *C2BRegisterURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_overlay_requests_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2BRegisterURLReq.ProtoReflect.Descriptor instead.
func (*C2BRegisterURLReq) Descriptor() ([]byte, []int) {
	return file_overlay_requests_proto_rawDescGZIP(), []int{2}
}

func (x *C2BRegisterURLReq) GetValidationURL() string {
	if x != nil {
		return x.ValidationURL
	}
	return ""
}

func (x *C2BRegisterURLReq) GetConfirmationURL() string {
	if x != nil {
		return x.ConfirmationURL
	}
	return ""
}

func (x *C2BRegisterURLReq) GetShortCode() uint64 {
	if x != nil {
		return x.ShortCode
	}
	return 0
}

func (x *C2BRegisterURLReq) GetResponseType() string {
	if x != nil {
		return x.ResponseType
	}
	return ""
}

type C2BSimulateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandID     string `protobuf:"bytes,1,opt,name=commandID,proto3" json:"commandID,omitempty"`
	Msisdn        string `protobuf:"bytes,2,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	BillRefNumber string `protobuf:"bytes,3,opt,name=billRefNumber,proto3" json:"billRefNumber,omitempty"`
	Amount        uint64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	ShortCode     uint64 `protobuf:"varint,5,opt,name=shortCode,proto3" json:"shortCode,omitempty"`
}

func (x *C2BSimulateReq) Reset() {
	*x = C2BSimulateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_overlay_requests_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2BSimulateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2BSimulateReq) ProtoMessage() {}

func (x *C2BSimulateReq) ProtoReflect() protoreflect.Message {
	mi := &file_overlay_requests_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2BSimulateReq.ProtoReflect.Descriptor instead.
func (*C2BSimulateReq) Descriptor() ([]byte, []int) {
	return file_overlay_requests_proto_rawDescGZIP(), []int{3}
}

func (x *C2BSimulateReq) GetCommandID() string {
	if x != nil {
		return x.CommandID
	}
	return ""
}

func (x *C2BSimulateReq) GetMsisdn() string {
	if x != nil {
		return x.Msisdn
	}
	return ""
}

func (x *C2BSimulateReq) GetBillRefNumber() string {
	if x != nil {
		return x.BillRefNumber
	}
	return ""
}

func (x *C2BSimulateReq) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *C2BSimulateReq) GetShortCode() uint64 {
	if x != nil {
		return x.ShortCode
	}
	return 0
}

type ExpressQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassKey           string `protobuf:"bytes,1,opt,name=passKey,proto3" json:"passKey,omitempty"`
	BusinessShortCode uint64 `protobuf:"varint,2,opt,name=businessShortCode,proto3" json:"businessShortCode,omitempty"`
	Password          string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Timestamp         string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CheckoutRequestID string `protobuf:"bytes,5,opt,name=checkoutRequestID,proto3" json:"checkoutRequestID,omitempty"`
}

func (x *ExpressQueryReq) Reset() {
	*x = ExpressQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_overlay_requests_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressQueryReq) ProtoMessage() {}

func (x *ExpressQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_overlay_requests_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressQueryReq.ProtoReflect.Descriptor instead.
func (*ExpressQueryReq) Descriptor() ([]byte, []int) {
	return file_overlay_requests_proto_rawDescGZIP(), []int{4}
}

func (x *ExpressQueryReq) GetPassKey() string {
	if x != nil {
		return x.PassKey
	}
	return ""
}

func (x *ExpressQueryReq) GetBusinessShortCode() uint64 {
	if x != nil {
		return x.BusinessShortCode
	}
	return 0
}

func (x *ExpressQueryReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ExpressQueryReq) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ExpressQueryReq) GetCheckoutRequestID() string {
	if x != nil {
		return x.CheckoutRequestID
	}
	return ""
}

type ExpressSimulateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassKey           string `protobuf:"bytes,1,opt,name=passKey,proto3" json:"passKey,omitempty"`
	BusinessShortCode uint64 `protobuf:"varint,2,opt,name=businessShortCode,proto3" json:"businessShortCode,omitempty"`
	Password          string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Timestamp         string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TransactionType   string `protobuf:"bytes,5,opt,name=transactionType,proto3" json:"transactionType,omitempty"`
	PhoneNumber       uint64 `protobuf:"varint,6,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Amount            uint64 `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	PartyA            uint64 `protobuf:"varint,8,opt,name=partyA,proto3" json:"partyA,omitempty"`
	PartyB            uint64 `protobuf:"varint,9,opt,name=partyB,proto3" json:"partyB,omitempty"`
	CallBackURL       string `protobuf:"bytes,10,opt,name=callBackURL,proto3" json:"callBackURL,omitempty"`
	AccountReference  string `protobuf:"bytes,11,opt,name=accountReference,proto3" json:"accountReference,omitempty"`
	TransactionDesc   string `protobuf:"bytes,12,opt,name=transactionDesc,proto3" json:"transactionDesc,omitempty"`
}

func (x *ExpressSimulateReq) Reset() {
	*x = ExpressSimulateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_overlay_requests_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressSimulateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressSimulateReq) ProtoMessage() {}

func (x *ExpressSimulateReq) ProtoReflect() protoreflect.Message {
	mi := &file_overlay_requests_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressSimulateReq.ProtoReflect.Descriptor instead.
func (*ExpressSimulateReq) Descriptor() ([]byte, []int) {
	return file_overlay_requests_proto_rawDescGZIP(), []int{5}
}

func (x *ExpressSimulateReq) GetPassKey() string {
	if x != nil {
		return x.PassKey
	}
	return ""
}

func (x *ExpressSimulateReq) GetBusinessShortCode() uint64 {
	if x != nil {
		return x.BusinessShortCode
	}
	return 0
}

func (x *ExpressSimulateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ExpressSimulateReq) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ExpressSimulateReq) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *ExpressSimulateReq) GetPhoneNumber() uint64 {
	if x != nil {
		return x.PhoneNumber
	}
	return 0
}

func (x *ExpressSimulateReq) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ExpressSimulateReq) GetPartyA() uint64 {
	if x != nil {
		return x.PartyA
	}
	return 0
}

func (x *ExpressSimulateReq) GetPartyB() uint64 {
	if x != nil {
		return x.PartyB
	}
	return 0
}

func (x *ExpressSimulateReq) GetCallBackURL() string {
	if x != nil {
		return x.CallBackURL
	}
	return ""
}

func (x *ExpressSimulateReq) GetAccountReference() string {
	if x != nil {
		return x.AccountReference
	}
	return ""
}

func (x *ExpressSimulateReq) GetTransactionDesc() string {
	if x != nil {
		return x.TransactionDesc
	}
	return ""
}

type QRReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantName string `protobuf:"bytes,1,opt,name=merchantName,proto3" json:"merchantName,omitempty"`
	RefNo        string `protobuf:"bytes,2,opt,name=refNo,proto3" json:"refNo,omitempty"`
	Amount       uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TrxCode      string `protobuf:"bytes,4,opt,name=trxCode,proto3" json:"trxCode,omitempty"`
	CPI          string `protobuf:"bytes,5,opt,name=cPI,proto3" json:"cPI,omitempty"`
	Size         string `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *QRReq) Reset() {
	*x = QRReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_overlay_requests_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRReq) ProtoMessage() {}

func (x *QRReq) ProtoReflect() protoreflect.Message {
	mi := &file_overlay_requests_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRReq.ProtoReflect.Descriptor instead.
func (*QRReq) Descriptor() ([]byte, []int) {
	return file_overlay_requests_proto_rawDescGZIP(), []int{6}
}

func (x *QRReq) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *QRReq) GetRefNo() string {
	if x != nil {
		return x.RefNo
	}
	return ""
}

func (x *QRReq) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *QRReq) GetTrxCode() string {
	if x != nil {
		return x.TrxCode
	}
	return ""
}

func (x *QRReq) GetCPI() string {
	if x != nil {
		return x.CPI
	}
	return ""
}

func (x *QRReq) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type RemitTax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiatorName          string `protobuf:"bytes,1,opt,name=initiatorName,proto3" json:"initiatorName,omitempty"`
	InitiatorPassword      string `protobuf:"bytes,2,opt,name=initiatorPassword,proto3" json:"initiatorPassword,omitempty"`
	SecurityCredential     string `protobuf:"bytes,3,opt,name=securityCredential,proto3" json:"securityCredential,omitempty"`
	CommandID              string `protobuf:"bytes,4,opt,name=commandID,proto3" json:"commandID,omitempty"`
	SenderIdentifierType   uint32 `protobuf:"varint,5,opt,name=senderIdentifierType,proto3" json:"senderIdentifierType,omitempty"`
	RecieverIdentifierType uint32 `protobuf:"varint,6,opt,name=recieverIdentifierType,proto3" json:"recieverIdentifierType,omitempty"`
	Amount                 uint64 `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	PartyA                 uint64 `protobuf:"varint,8,opt,name=partyA,proto3" json:"partyA,omitempty"`
	PartyB                 uint64 `protobuf:"varint,9,opt,name=partyB,proto3" json:"partyB,omitempty"`
	AccountReference       string `protobuf:"bytes,10,opt,name=accountReference,proto3" json:"accountReference,omitempty"`
	QueueTimeOutURL        string `protobuf:"bytes,11,opt,name=queueTimeOutURL,proto3" json:"queueTimeOutURL,omitempty"`
	ResultURL              string `protobuf:"bytes,12,opt,name=resultURL,proto3" json:"resultURL,omitempty"`
	Remarks                string `protobuf:"bytes,13,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *RemitTax) Reset() {
	*x = RemitTax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_overlay_requests_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemitTax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemitTax) ProtoMessage() {}

func (x *RemitTax) ProtoReflect() protoreflect.Message {
	mi := &file_overlay_requests_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemitTax.ProtoReflect.Descriptor instead.
func (*RemitTax) Descriptor() ([]byte, []int) {
	return file_overlay_requests_proto_rawDescGZIP(), []int{7}
}

func (x *RemitTax) GetInitiatorName() string {
	if x != nil {
		return x.InitiatorName
	}
	return ""
}

func (x *RemitTax) GetInitiatorPassword() string {
	if x != nil {
		return x.InitiatorPassword
	}
	return ""
}

func (x *RemitTax) GetSecurityCredential() string {
	if x != nil {
		return x.SecurityCredential
	}
	return ""
}

func (x *RemitTax) GetCommandID() string {
	if x != nil {
		return x.CommandID
	}
	return ""
}

func (x *RemitTax) GetSenderIdentifierType() uint32 {
	if x != nil {
		return x.SenderIdentifierType
	}
	return 0
}

func (x *RemitTax) GetRecieverIdentifierType() uint32 {
	if x != nil {
		return x.RecieverIdentifierType
	}
	return 0
}

func (x *RemitTax) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RemitTax) GetPartyA() uint64 {
	if x != nil {
		return x.PartyA
	}
	return 0
}

func (x *RemitTax) GetPartyB() uint64 {
	if x != nil {
		return x.PartyB
	}
	return 0
}

func (x *RemitTax) GetAccountReference() string {
	if x != nil {
		return x.AccountReference
	}
	return ""
}

func (x *RemitTax) GetQueueTimeOutURL() string {
	if x != nil {
		return x.QueueTimeOutURL
	}
	return ""
}

func (x *RemitTax) GetResultURL() string {
	if x != nil {
		return x.ResultURL
	}
	return ""
}

func (x *RemitTax) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type ReversalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandID              string `protobuf:"bytes,1,opt,name=commandID,proto3" json:"commandID,omitempty"`
	ReceiverParty          uint64 `protobuf:"varint,2,opt,name=receiverParty,proto3" json:"receiverParty,omitempty"`
	RecieverIdentifierType uint32 `protobuf:"varint,3,opt,name=recieverIdentifierType,proto3" json:"recieverIdentifierType,omitempty"`
	Remarks                string `protobuf:"bytes,4,opt,name=remarks,proto3" json:"remarks,omitempty"`
	InitiatorName          string `protobuf:"bytes,5,opt,name=initiatorName,proto3" json:"initiatorName,omitempty"`
	InitiatorPassword      string `protobuf:"bytes,6,opt,name=initiatorPassword,proto3" json:"initiatorPassword,omitempty"`
	SecurityCredential     string `protobuf:"bytes,7,opt,name=securityCredential,proto3" json:"securityCredential,omitempty"`
	QueueTimeOutURL        string `protobuf:"bytes,8,opt,name=queueTimeOutURL,proto3" json:"queueTimeOutURL,omitempty"`
	ResultURL              string `protobuf:"bytes,9,opt,name=resultURL,proto3" json:"resultURL,omitempty"`
	Occasion               string `protobuf:"bytes,10,opt,name=occasion,proto3" json:"occasion,omitempty"`
	Amount                 uint64 `protobuf:"varint,11,opt,name=amount,proto3" json:"amount,omitempty"`
	TransactionID          string `protobuf:"bytes,12,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
}

func (x *ReversalReq) Reset() {
	*x = ReversalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_overlay_requests_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReversalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReversalReq) ProtoMessage() {}

func (x *ReversalReq) ProtoReflect() protoreflect.Message {
	mi := &file_overlay_requests_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReversalReq.ProtoReflect.Descriptor instead.
func (*ReversalReq) Descriptor() ([]byte, []int) {
	return file_overlay_requests_proto_rawDescGZIP(), []int{8}
}

func (x *ReversalReq) GetCommandID() string {
	if x != nil {
		return x.CommandID
	}
	return ""
}

func (x *ReversalReq) GetReceiverParty() uint64 {
	if x != nil {
		return x.ReceiverParty
	}
	return 0
}

func (x *ReversalReq) GetRecieverIdentifierType() uint32 {
	if x != nil {
		return x.RecieverIdentifierType
	}
	return 0
}

func (x *ReversalReq) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *ReversalReq) GetInitiatorName() string {
	if x != nil {
		return x.InitiatorName
	}
	return ""
}

func (x *ReversalReq) GetInitiatorPassword() string {
	if x != nil {
		return x.InitiatorPassword
	}
	return ""
}

func (x *ReversalReq) GetSecurityCredential() string {
	if x != nil {
		return x.SecurityCredential
	}
	return ""
}

func (x *ReversalReq) GetQueueTimeOutURL() string {
	if x != nil {
		return x.QueueTimeOutURL
	}
	return ""
}

func (x *ReversalReq) GetResultURL() string {
	if x != nil {
		return x.ResultURL
	}
	return ""
}

func (x *ReversalReq) GetOccasion() string {
	if x != nil {
		return x.Occasion
	}
	return ""
}

func (x *ReversalReq) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReversalReq) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

type TransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandID          string `protobuf:"bytes,1,opt,name=commandID,proto3" json:"commandID,omitempty"`
	PartyA             uint64 `protobuf:"varint,2,opt,name=partyA,proto3" json:"partyA,omitempty"`
	IdentifierType     uint32 `protobuf:"varint,3,opt,name=identifierType,proto3" json:"identifierType,omitempty"`
	Remarks            string `protobuf:"bytes,4,opt,name=remarks,proto3" json:"remarks,omitempty"`
	InitiatorName      string `protobuf:"bytes,5,opt,name=initiatorName,proto3" json:"initiatorName,omitempty"`
	InitiatorPassword  string `protobuf:"bytes,6,opt,name=initiatorPassword,proto3" json:"initiatorPassword,omitempty"`
	SecurityCredential string `protobuf:"bytes,7,opt,name=securityCredential,proto3" json:"securityCredential,omitempty"`
	QueueTimeOutURL    string `protobuf:"bytes,8,opt,name=queueTimeOutURL,proto3" json:"queueTimeOutURL,omitempty"`
	ResultURL          string `protobuf:"bytes,9,opt,name=resultURL,proto3" json:"resultURL,omitempty"`
	TransactionID      string `protobuf:"bytes,10,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	Occasion           string `protobuf:"bytes,11,opt,name=occasion,proto3" json:"occasion,omitempty"`
}

func (x *TransactionReq) Reset() {
	*x = TransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_overlay_requests_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReq) ProtoMessage() {}

func (x *TransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_overlay_requests_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReq.ProtoReflect.Descriptor instead.
func (*TransactionReq) Descriptor() ([]byte, []int) {
	return file_overlay_requests_proto_rawDescGZIP(), []int{9}
}

func (x *TransactionReq) GetCommandID() string {
	if x != nil {
		return x.CommandID
	}
	return ""
}

func (x *TransactionReq) GetPartyA() uint64 {
	if x != nil {
		return x.PartyA
	}
	return 0
}

func (x *TransactionReq) GetIdentifierType() uint32 {
	if x != nil {
		return x.IdentifierType
	}
	return 0
}

func (x *TransactionReq) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *TransactionReq) GetInitiatorName() string {
	if x != nil {
		return x.InitiatorName
	}
	return ""
}

func (x *TransactionReq) GetInitiatorPassword() string {
	if x != nil {
		return x.InitiatorPassword
	}
	return ""
}

func (x *TransactionReq) GetSecurityCredential() string {
	if x != nil {
		return x.SecurityCredential
	}
	return ""
}

func (x *TransactionReq) GetQueueTimeOutURL() string {
	if x != nil {
		return x.QueueTimeOutURL
	}
	return ""
}

func (x *TransactionReq) GetResultURL() string {
	if x != nil {
		return x.ResultURL
	}
	return ""
}

func (x *TransactionReq) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *TransactionReq) GetOccasion() string {
	if x != nil {
		return x.Occasion
	}
	return ""
}

var File_overlay_requests_proto protoreflect.FileDescriptor

var file_overlay_requests_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6d, 0x70, 0x65, 0x73, 0x61, 0x6f,
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x22, 0xd3,
	0x02, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x41, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x12,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x4f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x55, 0x52, 0x4c, 0x22, 0xd2, 0x03, 0x0a, 0x06, 0x42, 0x32, 0x43, 0x72, 0x65, 0x71, 0x12,
	0x3a, 0x0a, 0x18, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x41, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79, 0x42, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x55, 0x52,
	0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x52, 0x4c, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x43, 0x32,
	0x42, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x12,
	0x24, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x43, 0x32, 0x42, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x69,
	0x6c, 0x6c, 0x52, 0x65, 0x66, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x66, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x22, 0xa2, 0x03, 0x0a, 0x12, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x41, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79, 0x41, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79, 0x42, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x74, 0x79, 0x42, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x42,
	0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61,
	0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x22,
	0x99, 0x01, 0x0a, 0x05, 0x51, 0x52, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x66, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65,
	0x66, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x72, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x78, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x50, 0x49, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x50, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xee, 0x03, 0x0a, 0x08,
	0x52, 0x65, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x12,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36,
	0x0a, 0x16, 0x72, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x72, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79, 0x41, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x41, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79, 0x42,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79, 0x42, 0x12, 0x2a,
	0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75,
	0x74, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x52,
	0x4c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55,
	0x52, 0x4c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0xc9, 0x03, 0x0a,
	0x0b, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x12, 0x36, 0x0a, 0x16, 0x72, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x16, 0x72, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x55, 0x52, 0x4c,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x96, 0x03, 0x0a, 0x0e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x41, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x55, 0x52,
	0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x52, 0x4c, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_overlay_requests_proto_rawDescOnce sync.Once
	file_overlay_requests_proto_rawDescData = file_overlay_requests_proto_rawDesc
)

func file_overlay_requests_proto_rawDescGZIP() []byte {
	file_overlay_requests_proto_rawDescOnce.Do(func() {
		file_overlay_requests_proto_rawDescData = protoimpl.X.CompressGZIP(file_overlay_requests_proto_rawDescData)
	})
	return file_overlay_requests_proto_rawDescData
}

var file_overlay_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_overlay_requests_proto_goTypes = []interface{}{
	(*AccBalanceReq)(nil),      // 0: mpesaoverlay.overlay.AccBalanceReq
	(*B2Creq)(nil),             // 1: mpesaoverlay.overlay.B2Creq
	(*C2BRegisterURLReq)(nil),  // 2: mpesaoverlay.overlay.C2BRegisterURLReq
	(*C2BSimulateReq)(nil),     // 3: mpesaoverlay.overlay.C2BSimulateReq
	(*ExpressQueryReq)(nil),    // 4: mpesaoverlay.overlay.ExpressQueryReq
	(*ExpressSimulateReq)(nil), // 5: mpesaoverlay.overlay.ExpressSimulateReq
	(*QRReq)(nil),              // 6: mpesaoverlay.overlay.QRReq
	(*RemitTax)(nil),           // 7: mpesaoverlay.overlay.RemitTax
	(*ReversalReq)(nil),        // 8: mpesaoverlay.overlay.ReversalReq
	(*TransactionReq)(nil),     // 9: mpesaoverlay.overlay.TransactionReq
}
var file_overlay_requests_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_overlay_requests_proto_init() }
func file_overlay_requests_proto_init() {
	if File_overlay_requests_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_overlay_requests_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_overlay_requests_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*B2Creq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_overlay_requests_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2BRegisterURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_overlay_requests_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2BSimulateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_overlay_requests_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_overlay_requests_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressSimulateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_overlay_requests_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_overlay_requests_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemitTax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_overlay_requests_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReversalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_overlay_requests_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_overlay_requests_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_overlay_requests_proto_goTypes,
		DependencyIndexes: file_overlay_requests_proto_depIdxs,
		MessageInfos:      file_overlay_requests_proto_msgTypes,
	}.Build()
	File_overlay_requests_proto = out.File
	file_overlay_requests_proto_rawDesc = nil
	file_overlay_requests_proto_goTypes = nil
	file_overlay_requests_proto_depIdxs = nil
}
